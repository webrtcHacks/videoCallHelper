@import "~bootstrap/scss/functions";
@import "~bootstrap/scss/variables";
@import "~bootstrap/scss/mixins";
@import "~bootstrap/scss/bootstrap";

body {
  min-width: 800px; /* Minimum width before showing horizontal scroll */
  background-color: #1a1a1a;
  color: #ccc;
  font-size: smaller; /*was originally 'small'*/
  border-color: #1a1a1a;
  opacity: 90%;
}

.tabs {
  display: flex;
  background-color: #1a1a1a;
  border-bottom: 1px solid #444;
  height: 24px;
  padding: 2px;
}

.tabs .tab {
  padding: 5px 10px; /* Smaller padding for lower profile */
  cursor: pointer;
  border-right: 1px solid #444;
  color: #ccc;
  flex-shrink: 0;
  height: 100%; /* Ensure tabs take full height of the top menu */
  display: flex;
  align-items: center; /* Center align items vertically */
}

.tabs .tab.active {
  background-color: #444;
  color: #ffffff;
}

.content {
  display: none;
  padding: 10px 10px 4px;
  flex-grow: 1;
  height: 125px;
}

.content.active {
  display: flex;
  align-items: flex-start; /* Align items to the start of the container */
  flex-direction: row; /* Stack items horizontally */
  gap: 10px; /* Add space between items */
}


.icon-button, {
  width: 120px;
  text-align: center;
  margin-right: 5px;

}

.icon-button i {
  font-size: 32px; /* Larger icon size */
  /*margin-bottom: 5px;*/
}

.icon-button span {
  font-size: 12px; /* Smaller text size */
  display: block; /* Ensure text is on a new line */
  line-height: 1.2;
}

@media (max-width: 1200px) {
  .icon-button {
    width: 86px;
    min-width: 60px; /* Ensure consistent width on large screens */
  }



  .icon-button, i {
    font-size: 20px;
  }

  .icon-button span {
    font-size: 12px;
  }

  /* TODO: reconcile .btn-group with .icon-button */
 /* .btn-group .btn {
    width: 86px;
  }*/

  .device-manager-selection-buttons button {
    font-size: 12px;
  }
}

@media (max-width: 1000px) {
  .icon-button {
    min-width: 60px;
  }

  .group-icon-btn {
    min-width: 60px;
  }

  .icon-button span {
    display: none;
  }

  .presence-status-button  {
    padding-top: $spacer * 1.5;
  }

  .device-manager-selection-buttons button {
    font-size: 8px;
  }

}

.reload-warning {
  display: none;
  font-size: 14px;
  margin: 10px 20%;
  max-width: 200px;
  text-align: center;
}

.reload-warning .btn {
  margin-top: 10px;
  width: 100%;
  text-align: center;
}

.device-group {
  display: inline-flex;
  flex-direction: row;
  margin: 0 0 5px;
  max-width: 100%;
  height: 90px; /* I don't know why this works but 100% doesn't */
}

.vertical-divider {
  border-left: 1px solid $gray-700;
  padding-left: 15px;
}

h5 {
  font-size: $font-size-base * 0.75;
  font-weight: $font-weight-bolder;
  border-bottom: 1px solid $gray-800;
  padding-bottom: 4px;
  margin-bottom: 0;
  color: $gray-500;
  text-transform: uppercase;
}

.accordion-horizontal .accordion-item {
  display: flex;
  flex-direction: row;
  transition: width 0.2s ease;
}

.accordion-horizontal .accordion-header {
  /*min-width: 120px;*/
  cursor: pointer;
}

.accordion-item.active {
  /*box-shadow: inset 2px 2px $gray-600;*/
  outline: 2px solid $gray-600;
  outline-offset: -2px;
  border-radius: $btn-border-radius;
}

.accordion-horizontal .accordion-body {
  display: flex; /* Use flexbox to manage its children */
  flex-grow: 0; /* Prevent vertical growth */
  flex-basis: auto; /* Allow the element to take its content width */
  flex-shrink: 1; /* Allow shrinking if necessary */
  transition: width 0.2s ease;
  height: 100%; /* Ensure the height is always 100% */
  background-color: $gray-900;
  padding: 4px 2px;
  overflow: hidden;
  margin-left: -4px; /* Remove left margin */
}

.accordion-horizontal .accordion-collapse {
  flex-grow: 1; // Ensure it grows to take available space
  display: flex; // Use flexbox to manage its children
  flex-direction: column; // Ensure its children are stacked vertically
  width: auto; // Allow it to take the necessary width
}

.device-manager-selections {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  width: 100%;
}

.form-check {
  // display: flex;
  // align-items: center;
  width: 100%;
}

.missing-device-checkmark {
  margin-right: 5px; // Adjust spacing as needed
  transition: color 0.3s ease; // Smooth transition for color change
}

.missing-device-checkmark i:hover {
  color: $danger; // Change color to red on hover
}

/**
    * Self-view
 */

.blur-icon {
  filter: blur(2px);
}
.icon-button:hover .blur-icon{
  filter: blur(4px); // Increase blur on hover
}


/**
 * Stream modification
 */

/* Bad quality */

#preview-button{
  width: 100%;
}

#preview-button img {
  width: 100%;
  height: 100%; /* Ensure the image scales to fill the button */
  object-fit: contain; /* Maintain the aspect ratio of the image */
  display: block;
}

#preview-button .preview-text {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  color: $white;
  background-color: rgba($black, 0.5);
  /*padding: $spacer * 0.25;*/
  border-bottom-left-radius: $border-radius;
  font-size: $font-size-sm;
  text-align: center;
  width: 100%;
}

#player-preview {
  /*max-height: 69px;*/
  height: 100%;
  object-fit: contain;
  max-width: 124px;
  min-width: 70px;
  border-top-left-radius: $border-radius;
  border-bottom-left-radius: $border-radius;
}

/**
    * Presence
 */
/*
attempts to prevent the i and spans from turning to white on hover failed
 */


/* Prevent the presence status items from changing behavior on hover */
.presence-status-button:hover {
  background-color: inherit !important; /* Keep the background color the same on hover */
  color: inherit !important; /* Keep the text color the same on hover */
}

.presence-status-button.active {
  color: $white; /* White text for active buttons */
}

.tab-group {
  display: flex;
  flex-direction: row;
  height: 125px;
  flex-grow: 1; /* Allow tab-group to use the rest of the available space */
}

.tab-content .form-group {
  flex: 1;
  margin-right: 10px;
}

.tab-content .form-control {
  height: 30px;
  padding: 5px;
  font-size: 12px;
}

.tab-content .btn {
  height: 30px;
  padding: 5px 10px;
  font-size: 12px;
}

#presenceConfigTabsContainer {
  display: flex;
  flex-direction: column;
  margin-left: 10px;
  flex-grow: 1; /* Allow presenceConfigTabsContainer to grow */
}

.nav-tabs {
  font-size: 12px; /* Make the nav-tabs smaller */
  padding: 0; /* Remove padding */
}

.tab-group {
  display: flex;
  flex-direction: row;
  height: 125px;
  flex-grow: 1; /* Allow tab-group to use the rest of the available space */
  width: 100%; /* Ensure the tab-group takes full width */
}

.tab-content {
  flex-grow: 1; /* Allow tab content to take the remaining space */
  width: 100%; /* Ensure the tab-content takes full width */
}

.tab-pane .row {
  display: flex;
  flex-wrap: nowrap; /* Prevent wrapping */
  gap: 5px; /* Add space between columns */
  height: 100%; /* Ensure the row takes all available vertical space */
  width: 100%; /* Ensure the row takes all available horizontal space */
}

.tab-pane .col {
  flex: 1; /* Ensure columns take equal space */
  display: flex;
  flex-direction: column; /* Stack items vertically */
  /*margin-left: 5px;
  margin-right: 5px; /* Reduce right margin */
}

.tab-pane .form-group {
  flex: 1; /* Allow form groups to grow */
  margin-bottom: 10px; /* Add space between form groups */
  margin-left: 5px; /* Reduce left margin */
  margin-right: 5px; /* Reduce right margin */
}

#presence .nav-tabs {
  font-size: 12px;
  padding: 0;
  flex-direction: column; /* Make tabs vertical */
  min-width: 95px;
}

.save-button {
  width: 100%; /* Ensure the button takes full width */
  padding: 5px; /* Adjust padding */
  display: flex;
  align-items: center;
  justify-content: center;
}

#presence .tab-content .form-group {
  flex: 1; /* Allow form groups to grow */
  margin-bottom: 10px; /* Add space between form groups */
  display: flex;
  flex-direction: column; /* Stack items vertically */
}

#presence textarea {
  flex-grow: 1; /* Allow the input and textarea to take the remaining space */
  height: 100%; /* Ensure the input and textarea take full height */
  padding: 5px;
  font-size: 12px;
}

.rotate-270 {
  transform: rotate(270deg);
  transform-origin: center;
  display: inline-block;
}

.btn-group i {
  display: block;
  font-size: 32px;
}

.btn-group span {
  font-size: 12px; /* Smaller text size */
  display: block; /* Ensure text is on a new line */
  line-height: 1.2;
}

.group-icon-btn {
    min-width: 100px;
}

#toggle-presence-config-tabs {
  width: 24px;
}

/** OLD STYLES **/

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(0, 128, 0, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(0, 128, 0, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(0, 128, 0, 0);
  }
}

@keyframes blinking {
  0% { opacity: 1; }
  50% { opacity: 0.5; }
  100% { opacity: 1; }
}

.blinking {
  animation: blinking 1s infinite;
}

/*
 * Popup Error page
 */

.popup {
  min-width: 300px;
  min-height: 260px;
}

.close-icon {
  position: absolute;
  top: 10px;
  right: 10px;
  cursor: pointer;
}


/*
 * Warning Toast
 */

.toast-container {
  z-index: 1055; /* Ensure it appears above other elements */
}

.toast {
  border: 1px solid $danger;
  background-color: rgba($danger, 0.9);
  color: $white;
}

.toast .btn-outline-light {
  border-color: $white;
  color: $white;
}

.toast .btn-outline-light:hover {
  background-color: $white;
  color: $danger;
}
